package com.vedro.touchpaint;

import java.util.ArrayList;

import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.Rect;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;

public class MainActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        MyView v = new MyView(this);
        setContentView(v);
    }

    class MyView extends View implements OnTouchListener {
        Paint p;
        ArrayList<Rect> rectangles;

        public MyView(Context context) {
            super(context);

            p = new Paint();
            rectangles = new ArrayList<>();
            setOnTouchListener(this);
            p.setStyle(Style.STROKE);
            p.setStrokeWidth(10);
            p.setColor(Color.RED);
        }

        int side = 100;

        @Override
        public boolean onTouch(View view, MotionEvent event) {

            int actionMask = event.getActionMasked();
            int pointerIndex = event.getActionIndex();

            switch (actionMask) {
                case MotionEvent.ACTION_DOWN:
                case MotionEvent.ACTION_POINTER_DOWN:
                    int evX = (int) event.getX(pointerIndex);
                    int evY = (int) event.getY(pointerIndex);
                    rectangles.add(new Rect(evX, evY, evX + side, evY + side));
                    break;
                case MotionEvent.ACTION_POINTER_UP:
                case MotionEvent.ACTION_UP:
                    rectangles.remove(pointerIndex);
                    break;
                case MotionEvent.ACTION_MOVE:
                    int max = event.getPointerCount();
                    for (int index = 0; index < max; index++) {
                        int evXdrag = (int) event.getX(index);
                        int evYdrag = (int) event.getY(index);
                        rectangles.get(index).offsetTo(evXdrag, evYdrag);
                    }

                    break;
            }
            invalidate();
            return true;
        }

        @Override
        protected void onDraw(Canvas canvas) {
            super.onDraw(canvas);
            for (Rect r : rectangles) {
                canvas.drawRect(r, p);
            }
        }
    }
}
