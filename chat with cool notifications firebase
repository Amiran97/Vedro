CheckUpdateService.java:

package com.vadro.firebase;

import android.app.ActivityManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;

import android.content.res.Resources;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.os.Handler;
import android.os.IBinder;
import android.support.v7.app.NotificationCompat;
import android.util.Log;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CheckUpdateService extends Service {

    private FirebaseAuth mFirebaseAuth;
    private FirebaseUser mFirechatUser;
    private DatabaseReference db;
    private String userName;

    public CheckUpdateService() {
    }

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    public boolean isForeground(String myPackage) {
        ActivityManager manager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);
        List<ActivityManager.RunningTaskInfo> runningTaskInfo = manager.getRunningTasks(1);
        ComponentName componentInfo = runningTaskInfo.get(0).topActivity;
        return componentInfo.getPackageName().equals(myPackage);
    }

    @Override
    public void onCreate() {
        super.onCreate();
        final Handler h = new Handler();
        h.post(new Runnable() {
            @Override
            public void run() {
                mFirebaseAuth = FirebaseAuth.getInstance();
                if (mFirebaseAuth == null) {
                    Log.i("log_tag", "проблемы с mFirebaseAuth");
                    stopSelf();
                    return;
                }

                mFirechatUser = mFirebaseAuth.getCurrentUser();
                if (mFirechatUser == null) {
                    Log.i("log_tag", "проблемы с mFirechatUser");
                    stopSelf();
                    return;
                }

                userName = mFirechatUser.getDisplayName();

                db = FirebaseDatabase.getInstance().getReference("messages");

                db.addValueEventListener(new ValueEventListener() {

                    public void makeNotification(String name, String text) {
                        Context context = getApplicationContext();

                        Intent notificationIntent = new Intent(context, MainActivity.class);
                        PendingIntent contentIntent = PendingIntent.getActivity(context,
                                0, notificationIntent,
                                PendingIntent.FLAG_CANCEL_CURRENT);

                        Resources res = context.getResources();
                        NotificationCompat.Builder builder = new NotificationCompat.Builder(context);

                        builder.setContentIntent(contentIntent)

                                .setLargeIcon(BitmapFactory.decodeResource(res, R.mipmap.ic_launcher))
                                .setSmallIcon(R.mipmap.ic_launcher)
                                .setTicker("Новое сообщение от " + name)
                                .setWhen(System.currentTimeMillis())
                                .setAutoCancel(true)
                                .setLights(Color.BLUE, 1, 1)
                                .setDefaults(Notification.DEFAULT_VIBRATE)
                                .setContentTitle(name)
                                .setContentText(text);

                        Notification notification = builder.build();

                        NotificationManager notificationManager = (NotificationManager) context
                                .getSystemService(Context.NOTIFICATION_SERVICE);

                        notificationManager.notify(101, notification);
                    }

                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        ArrayList<DataSnapshot> ar = new ArrayList<>();
                        for (DataSnapshot child : dataSnapshot.getChildren()) {
                            // перегоняем все данные базы в эррейлист
                            ar.add(child);
                        }
                        // ключик последнего сообщения
                        //Log.i("log_tag", ar.get(ar.size()-1).getKey());
                        // значение последнего сообщения
                        //Log.i("log_tag", ar.get(ar.size()-1).getValue().toString());

                        // если новое добавленное сообщение - чужое
                        if (!ar.get(ar.size() - 1).getValue().toString().contains("name=" + userName)) {

                            // и активити не открыто
                            if (!isForeground("com.sunmeat.firebase")) {
                                String name = ar.get(ar.size() - 1).child("name").getValue().toString();
                                String text = ar.get(ar.size() - 1).child("text").getValue().toString();
                                makeNotification(name, text);
                            }
                        }
                    }

                    @Override
                    public void onCancelled(DatabaseError databaseError) {

                    }
                });
                //Log.i("log_tag", DateFormat.getDateTimeInstance().format(new Date()));
            }
        });
    }
}

=============================================================================================================================

AndroidManifest.xml:

<uses-permission android:name="android.permission.GET_TASKS" />
правда, этот пермишен помечен как депрекейтед...
но, на Lollipop всё работало.

==============================================================================================================================

MainActivity.java:

@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // старт сервиса проверки обновлений базы
        //stopService(new Intent(this, CheckUpdateService.class));
        startService(new Intent(this, CheckUpdateService.class));

        progress = (ProgressBar) findViewById(R.id.progressBar);
        
        ...
