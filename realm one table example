build.gradle (Project):

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'

        // https://realm.io/docs/java/latest/
        // STEP ONE! <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
        classpath "io.realm:realm-gradle-plugin:5.10.0"
        // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    }
}

allprojects {
   ...

==================================================================================================================

build.gradle (Module):

apply plugin: 'com.android.application'

// STEP TWO! <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
apply plugin: 'realm-android'
// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.vedro.realm"
        minSdkVersion 21
        ...

==================================================================================================================

MainActivity.java:

package com.vedro.realm;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import io.realm.Realm;
import io.realm.RealmResults;

// https://realm.io/docs/java/latest/

public class MainActivity extends AppCompatActivity {

    private Realm realm;

    private EditText code;
    private EditText name;
    private EditText population;
    private TextView data;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Realm.init(this);

        realm = Realm.getDefaultInstance();

        code = findViewById(R.id.code);
        name = findViewById(R.id.name);
        population = findViewById(R.id.population);
        data = findViewById(R.id.data);

        select(null); // show data from realm base on start
    }

    public void delete(View v) {
        realm.beginTransaction();
        RealmResults<Country> countries = realm.where(Country.class).equalTo("code", code.getText() + "").findAll();
        if (!countries.isEmpty()) {

            countries.deleteAllFromRealm();

            Toast.makeText(this, "запись успешно удалена!", Toast.LENGTH_SHORT).show();
            select(null);
        } else {
            Toast.makeText(this, "страна с таким кодом не обнаружена", Toast.LENGTH_SHORT).show();
        }
        realm.commitTransaction();
    }

    private boolean checkId(String code) {
        realm.beginTransaction();
        RealmResults<Country> countries = realm.where(Country.class).equalTo("code", code).findAll();
        realm.commitTransaction();
        return !countries.isEmpty();
    }

    public void select(View v) {

        RealmResults<Country> countries = realm.where(Country.class).findAll();

        // realm.where(Country.class).greaterThan("population", 100000000).findAll();
        // myRealm.where(Country.class).findAllSorted("name", false);

        String results = "";
        for (Country c : countries) {
            results += c.getCode() + ", " + c.getName() + ", " + c.getPopulation() + "\n";
        }
        if (!countries.isEmpty()) data.setText(results);
        else data.setText("в базе пока что нет данных");
    }

    public void insert(View v) {

        if (code.getText().length() == 0 || name.getText().length() == 0
                || population.getText().length() == 0) {
            Toast.makeText(this, "пожалуйста, заполните все три поля", Toast.LENGTH_SHORT).show();
            return;
        }

        if (checkId(code.getText() + "")) {
            // запрет вставки записи с существующим кодом строаны
            // Toast.makeText(this, "страна с таким кодом уже есть в базе!", Toast.LENGTH_SHORT).show();
            // return;

            // обновление записи с существующим кодом страны
            Country c = new Country();
            c.setCode(code.getText() + "");
            c.setName(name.getText() + "");
            c.setPopulation(Integer.parseInt(population.getText() + ""));

            realm.beginTransaction();
            realm.copyToRealmOrUpdate(c);
            realm.commitTransaction();

            Toast.makeText(this, "запись успешно обновлена!", Toast.LENGTH_SHORT).show();
            select(null);
            return;
        }

        Country c = new Country();
        c.setCode(code.getText() + "");
        c.setName(name.getText() + "");
        c.setPopulation(Integer.parseInt(population.getText() + ""));

        realm.beginTransaction();
        final Country add = realm.copyToRealm(c);
        realm.commitTransaction();

        Toast.makeText(this, "запись успешно добавлена!", Toast.LENGTH_SHORT).show();
        select(null);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        realm.close();
    }
}

==================================================================================================================

activity_main.xml:

<?xml version="1.0" encoding="utf-8"?>

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <EditText
        android:id="@+id/code"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:hint="код страны (например, UA)"
        android:inputType="text" />

    <EditText
        android:id="@+id/name"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:hint="название страны"
        android:inputType="text" />

    <EditText
        android:id="@+id/population"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:hint="население"
        android:inputType="number" />

    <Button
        android:id="@+id/insert"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:onClick="insert"
        android:text="Добавить страну (либо обновить по коду)"
        android:textAllCaps="false" />

    <Button
        android:id="@+id/delete"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_margin="10dp"
        android:onClick="delete"
        android:text="Удалить запись по коду страны"
        android:textAllCaps="false" />

    <TextView
        android:id="@+id/data"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_margin="10dp" />

</LinearLayout>

==================================================================================================================

Country.java:

package com.vedro.realm;

import io.realm.RealmObject;
import io.realm.annotations.PrimaryKey;

public class Country extends RealmObject {

    @PrimaryKey
    private String code;

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    private String name;
    private int population;

    public Country() { }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getPopulation() {
        return population;
    }

    public void setPopulation(int population) {
        this.population = population;
    }

}
